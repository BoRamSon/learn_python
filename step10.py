import random
import time
import math

# 🟩 Step 10 : 집합 사용하기

# 집합에는 index[1], index[2] 이런 것들이 없다. 그 묶음자체가 집합이다.
# 집합은 같은 원소(같은 내용)이 같이 존재할 수 없습니다.


# 합집합 연산 - 겹치는 원소를 하나로 합쳐서 만들어줌
# 차집합 연산 - 겹치는 원소를 그냥 빼버리는 역할
# 교집합 연산 - 겹치는 원소만 출력


# 🟡 중복이 제거되는 것을 확인해보자!
# foods = ["된장찌개", "피자", "제육볶음", "된장찌개"]
# foods_set = set(foods) #이거는 중복인 된장찌개 값이 제거된다.
# print(foods)
# print(foods_set) #된장찌개 뺴고, 프린트 된다.




# 🟡 집합 사용해보기 
menu1 = set(["된장찌개", "피자", "제육볶음"])
menu2 = set(["된장찌개", "떡국", "김밥"])

# < 합집합 >
menu3 = menu1 | menu2  # 키보드 enter키 위에 있는 일자키
print(menu3)  # 결과 : {'피자', '된장찌개', '김밥', '떡국', '제육볶음'}


# < 차집합 >
menu4 = menu1 - menu2
print(menu4)  # 결과 : {'피자', '제육볶음'}
# 🆘 ???????????? 이거 왜 결과가 이렇게 되는 것인지 모르겠습니다.
    # 선택하신 코드에서 menu4 = menu1 - menu2는 menu1에서 menu2와 겹치는 원소를 제거하는 차집합 연산입니다.
    # menu1은 {"된장찌개", "피자", "제육볶음"}이고, menu2는 {"된장찌개", "떡국", "김밥"}입니다. 
    # 이 두 집합에서 겹치는 원소는 "된장찌개"입니다.
    # 따라서 menu1 - menu2의 결과는 "된장찌개"를 제외한 menu1의 원소, 즉 {"피자", "제육볶음"}이 됩니다.
    # 즉, 기준이 menu1이고, menu2와 겹치는 원소만 menu1에서 제거하고 menu1을 출력하는 것이 차집합 연산입니다.


# < 교집합 >
menu5 = menu1 & menu2
print(menu5)









# 예시
# s1 = {1, 2, 3}
# s2 = {2, 3, 4}
# print(s1.union(s2))  # 합집합: {1, 2, 3, 4}
# print(s1.intersection(s2))  # 교집합: {2, 3}
# print(s1.difference(s2))  # 차집합: {1}